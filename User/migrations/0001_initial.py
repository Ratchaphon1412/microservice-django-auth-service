# Generated by Django 4.2.5 on 2023-09-16 07:40

import User.models
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfiles',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('profile', models.URLField(blank=True, max_length=255)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('role', models.CharField(choices=[('User', 'User'), ('Provider', 'Provider')], default='User', max_length=10)),
                ('service', models.CharField(choices=[('Local', 'Local'), ('Google', 'Google'), ('Facebook', 'Facebook')], default='Local', max_length=10)),
                ('phone', models.CharField(blank=True, max_length=10, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', User.models.UserProfilesManager()),
            ],
        ),
    ]
